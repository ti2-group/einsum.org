import type { FormState } from './ConvexityForm';

export const examples = [
  {
    title: 'Minimal example',
    values: {
      expression: 'X',
      success: true,
      variables: [
        {
          name: 'X',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
      ],
      wrt: 'X',
      result: 'AFFINE',
      strict: false,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'Diagonal broadcast',
    values: {
      expression: "#(',,i->ii', s, s, d)",
      success: true,
      variables: [
        {
          name: 's',
          order: 0,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'd',
          order: 1,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '0.0', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
      ],
      wrt: 's',
      result: 'CONVEX',
      strict: true,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'Least squares regression',
    values: {
      expression: "sum((#('ij,i->j',\n X, w)-y)^2)",
      success: true,
      variables: [
        {
          name: 'X',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'w',
          order: 1,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'y',
          order: 1,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
      ],
      wrt: 'w',
      result: 'CONVEX',
      strict: false,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'Logtrace',
    values: {
      expression: 'log(trace(X))',
      success: true,
      variables: [
        {
          name: 'X',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
      ],
      wrt: 'X',
      result: 'CONCAVE',
      strict: false,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'Exptrace',
    values: {
      expression: 'exp(trace(X))',
      success: true,
      variables: [
        {
          name: 'X',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
      ],
      wrt: 'X',
      result: 'CONVEX',
      strict: false,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'tr(X^T * B * X)',
    values: {
      expression: "trace(#('ia,ij,jb->ab',\n X, B, X))",
      success: true,
      variables: [
        {
          name: 'X',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'B',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: ['PSD'],
          inferredTags: [],
        },
      ],
      wrt: 'X',
      result: 'CONVEX',
      strict: false,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'UV decomposition',
    values: {
      expression: "sum((A-#('ij,kj->ik',\n U, V))^2)",
      success: true,
      variables: [
        {
          name: 'A',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'U',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'V',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
      ],
      wrt: 'V',
      result: 'CONVEX',
      strict: false,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'Tucker decomposition',
    values: {
      expression: "sum((X - #('ijk,ia,jb,kc\n->abc', K, A, B, C))^2)",
      success: true,
      variables: [
        {
          name: 'X',
          order: 3,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'K',
          order: 3,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'A',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'B',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'C',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
      ],
      wrt: 'A',
      result: 'CONVEX',
      strict: false,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'Rank 1 decomposition',
    values: {
      expression: "||(X - #('i,j,k->ijk',\n u, v, w))||^2",
      success: true,
      variables: [
        {
          name: 'X',
          order: 3,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'u',
          order: 1,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'v',
          order: 1,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
        {
          name: 'w',
          order: 1,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
      ],
      wrt: 'u',
      result: 'CONVEX',
      strict: false,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'Log-sum-exp',
    values: {
      expression: 'log(sum(exp(X)))',
      success: true,
      variables: [
        {
          name: 'X',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: [],
          inferredTags: [],
        },
      ],
      wrt: 'X',
      result: 'CONVEX',
      strict: false,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'Logdet',
    values: {
      expression: 'log(det(X))',
      success: true,
      variables: [
        {
          name: 'X',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: ['SYM', 'PSD'],
          inferredTags: [],
        },
      ],
      wrt: 'X',
      result: 'CONCAVE',
      strict: false,
      weak: false,
      weakConditions: [],
    },
  },
  {
    title: 'Restricted domain',
    values: {
      expression: "#('ab,bc,cd,da->',\n X, B, X, B)",
      success: true,
      variables: [
        {
          name: 'X',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: ['SYM', 'PSD'],
          inferredTags: ['WEAK'],
        },
        {
          name: 'B',
          order: 2,
          orderInferred: false,
          interval: { lowerIncluded: false, lower: '-inf', upper: 'inf', upperIncluded: false },
          tags: ['SYM'],
          inferredTags: [],
        },
      ],
      wrt: 'X',
      result: 'CONVEX',
      strict: false,
      weak: true,
      weakConditions: ['NSD'],
    },
  },
] as { title: string; values: FormState & { success: boolean } }[];
