// Sample services data
export const services = [
  {
    id: 1,
    title: 'Einsum Benchmark',
    description: 'Enabling the Development of Next-Generation Tensor Execution Engines.',
    imageUrl: 'https://benchmark.einsum.org/_astro/large_contractions.BD9AaBBe_ZfPWjw.webp',
    url: 'https://benchmark.einsum.org',
  },
  {
    id: 2,
    title: 'Tenvexity',
    description: 'Convexity certificates for einsum expressions',
    imageUrl: 'https://tenvexity.einsum.org/_astro/favicon.bbFTkENz.svg',
    url: 'https://tenvexity.einsum.org',
  },
  {
    id: 3,
    title: 'SQL Einsum',
    description: 'Turn Einsum Expressions into ANSI SQL.',
    imageUrl:
      'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Sql_data_base_with_logo.png/512px-Sql_data_base_with_logo.png?20210130181641',
    url: 'https://sql-einsum.ti2.uni-jena.de/',
  },
  {
    id: 4,
    title: 'Fast contraction paths',
    description: 'Speed up evaluation of large einsum contractions with better contraction paths.',
    imageUrl:
      'https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Lightning_strike_icon.svg/512px-Lightning_strike_icon.svg.png?20240229051510',
    url: 'https://github.com/ti2-group/hybrid_contraction_tree_optimizer',
  },
];

export const papers = [
  {
    id: 1,
    title: 'Einsum Trees: An Abstraction for Optimizing the Execution of Tensor Expressions',
    authors: [
      'Alexander Breuer',
      'Mark Blacher',
      'Max Engel',
      'Joachim Giesen',
      'Alexander Heinecke',
      'Julien Klaus',
      'Stefan Remke',
    ],
    conference:
      'International Conference on Architectural Support for Programming Languages and Operating Systems',
    year: 2025,
    url: 'https://doi.org/10.1145/3676641.3716254',
    bibtex: `@inproceedings{breuer2025einsum1,
  author = {Alexander Breuer and Mark Blacher and Max Engel and Joachim Giesen and Alexander Heinecke and Julien Klaus and Stefan Remke},
  title = {Einsum Trees: An Abstraction for Optimizing the Execution of Tensor Expressions},
  year = {2025},
  booktitle = {International Conference on Architectural Support for Programming Languages and Operating Systems},
  url = {https://doi.org/10.1145/3676641.3716254},
}`,
    abstract: `Einsum is a declarative language for tensor expressions that specifies an output tensor in terms of several input tensors. However, it does not specify how to compute the output tensor from the input tensors. A typical computational backend for the einsum language comprises two parts: First, a contraction path algorithm that breaks down an einsum expression into a sequence of binary tensor contractions. Second, the execution of the binary contractions. For efficient binary contractions, the data layout of the tensors must be optimized. So far, the computation of contraction paths and the optimization of the data layout for single, that is, local, binary tensor contractions have been studied in isolation. For optimizing the overall execution times of einsum expressions, we introduce Einsum Tree IR, an intermediate representation for globally optimizing the data layout for a given contraction path. We illustrate the effectiveness of the approach on a state-of-the-art Arm server processor, an x86 server processor, and an x86 desktop system.`,
  },
  {
    id: 2,
    title: 'The Syntax and Semantics of einsum',
    authors: ['Maurice Wenig', 'P. G. Rump', 'Mark Blacher', 'Joachim Giesen'],
    conference: 'arXiv.org',
    year: 2025,
    url: 'https://arxiv.org/abs/2509.20020',
    bibtex: `@misc{wenig2025the2,
  author = {Maurice Wenig and P. G. Rump and Mark Blacher and Joachim Giesen},
  title = {The Syntax and Semantics of einsum},
  year = {2025},
  url = {https://arxiv.org/abs/2509.20020},
}`,
    abstract: `In 2011, einsum was introduced to NumPy as a practical and convenient notation for tensor expressions in machine learning, quantum circuit simulation, and other fields. It has since been implemented in additional Python frameworks such as PyTorch and TensorFlow, as well as in other programming languages such as Julia. Despite its practical success, the einsum notation still lacks a solid theoretical basis, and is not unified across the different frameworks, limiting opportunities for formal reasoning and systematic optimization. In this work, we discuss the terminology of tensor expressions and provide a formal definition of the einsum language. Based on this definition, we formalize and prove important equivalence rules for tensor expressions and highlight their relevance in practical applications.`,
  },
  {
    id: 3,
    title:
      'Optimizing Tensor Contraction Paths: A Greedy Algorithm Approach With Improved Cost Functions',
    authors: ['Sheela Orgler', 'Mark Blacher'],
    conference: 'arXiv.org',
    year: 2024,
    url: 'https://doi.org/10.48550/arXiv.2405.09644',
    bibtex: `@inproceedings{orgler2024optimizi3,
  author = {Sheela Orgler and Mark Blacher},
  title = {Optimizing Tensor Contraction Paths: A Greedy Algorithm Approach With Improved Cost Functions},
  year = {2024},
  booktitle = {arXiv.org},
  url = {https://doi.org/10.48550/arXiv.2405.09644},
}`,
    abstract: `Finding efficient tensor contraction paths is essential for a wide range of problems, including model counting, quantum circuits, graph problems, and language models. There exist several approaches to find efficient paths, such as the greedy and random greedy algorithm by Optimized Einsum (opt_einsum), and the greedy algorithm and hypergraph partitioning approach employed in cotengra. However, these algorithms require a lot of computational time and resources to find efficient contraction paths. In this paper, we introduce a novel approach based on the greedy algorithm by opt_einsum that computes efficient contraction paths in less time. Moreover, with our approach, we are even able to compute paths for large problems where modern algorithms fail.`,
  },
  {
    id: 4,
    title: 'Model Counting and Sampling via Semiring Extensions',
    authors: [
      'Andreas Goral',
      'Joachim Giesen',
      'Mark Blacher',
      'Christoph Staudt',
      'Julien Klaus',
    ],
    conference: 'AAAI Conference on Artificial Intelligence',
    year: 2024,
    url: 'https://doi.org/10.1609/aaai.v38i18.30022',
    bibtex: `@inproceedings{goral2024model4,
  author = {Andreas Goral and Joachim Giesen and Mark Blacher and Christoph Staudt and Julien Klaus},
  title = {Model Counting and Sampling via Semiring Extensions},
  year = {2024},
  booktitle = {AAAI Conference on Artificial Intelligence},
  url = {https://doi.org/10.1609/aaai.v38i18.30022},
}`,
    abstract: `Many decision and optimization problems have natural extensions as counting problems. The best known example is the Boolean satisfiability problem (SAT), where we want to count the satisfying assignments of truth values to the variables, which is known as the #SAT problem. Likewise, for discrete optimization problems, we want to count the states on which the objective function attains the optimal value. Both SAT and discrete optimization can be formulated as selective marginalize a product function (MPF) queries. Here, we show how general selective MPF queries can be extended for model counting. MPF queries are encoded as tensor hypernetworks over suitable semirings that can be solved by generic tensor hypernetwork contraction algorithms. Our model counting extension is again an MPF query, on an extended semiring, that can be solved by the same contraction algorithms. Model counting is required for uniform model sampling. We show how the counting extension can be further extended for model sampling by constructing yet another semiring. We have implemented the model counting and sampling extensions. Experiments show that our generic approach is competitive with the state of the art in model counting and model sampling.`,
  },
  {
    id: 5,
    title: 'Serving MPE Queries on Tensor Networks by Computing Derivatives',
    authors: ['Maurice Wenig', 'Hanno Barschel', 'Joachim Giesen', 'Andreas Goral', 'Mark Blacher'],
    conference: 'European Workshop on Probabilistic Graphical Models',
    year: 2024,
    url: 'https://www.semanticscholar.org/paper/60b16ce23acdada93eacccc3dfb4a7923b9ee3d6',
    bibtex: `@inproceedings{wenig2024serving5,
  author = {Maurice Wenig and Hanno Barschel and Joachim Giesen and Andreas Goral and Mark Blacher},
  title = {Serving MPE Queries on Tensor Networks by Computing Derivatives},
  year = {2024},
  booktitle = {European Workshop on Probabilistic Graphical Models},
  url = {https://www.semanticscholar.org/paper/60b16ce23acdada93eacccc3dfb4a7923b9ee3d6},
}`,
    abstract: ``,
  },
  {
    id: 6,
    title: 'Einsum Benchmark: Enabling the Development of Next-Generation Tensor Execution Engines',
    authors: [
      'Mark Blacher',
      'Christoph Staudt',
      'Julien Klaus',
      'Maurice Wenig',
      'Niklas Merk',
      'Alexander Breuer',
      'Max Engel',
      'Soren Laue',
      'Joachim Giesen',
    ],
    conference: 'Neural Information Processing Systems',
    year: 2024,
    url: 'https://www.semanticscholar.org/paper/eeff742f68e0124e397e78ca9fe22cdf4097423d',
    bibtex: `@inproceedings{blacher2024einsum6,
  author = {Mark Blacher and Christoph Staudt and Julien Klaus and Maurice Wenig and Niklas Merk and Alexander Breuer and Max Engel and Soren Laue and Joachim Giesen},
  title = {Einsum Benchmark: Enabling the Development of Next-Generation Tensor Execution Engines},
  year = {2024},
  booktitle = {Neural Information Processing Systems},
  url = {https://www.semanticscholar.org/paper/eeff742f68e0124e397e78ca9fe22cdf4097423d},
}`,
    abstract: ``,
  },
  {
    id: 7,
    title: 'Improved Cut Strategy for Tensor Network Contraction Orders',
    authors: [
      'Christoph Staudt',
      'Mark Blacher',
      'Julien Klaus',
      'Farin Lippmann',
      'Joachim Giesen',
    ],
    conference: 'Symposium on Experimental Algorithms',
    year: 2024,
    url: 'https://doi.org/10.4230/LIPIcs.SEA.2024.27',
    bibtex: `@inproceedings{staudt2024improved7,
  author = {Christoph Staudt and Mark Blacher and Julien Klaus and Farin Lippmann and Joachim Giesen},
  title = {Improved Cut Strategy for Tensor Network Contraction Orders},
  year = {2024},
  booktitle = {Symposium on Experimental Algorithms},
  url = {https://doi.org/10.4230/LIPIcs.SEA.2024.27},
}`,
    abstract: ``,
  },
  {
    id: 8,
    title: 'Compiling Tensor Expressions into Einsum',
    authors: ['Julien Klaus', 'Mark Blacher', 'Joachim Giesen'],
    conference: 'International Conference on Conceptual Structures',
    year: 2023,
    url: 'https://doi.org/10.1007/978-3-031-36021-3_10',
    bibtex: `@inproceedings{klaus2023compilin8,
  author = {Julien Klaus and Mark Blacher and Joachim Giesen},
  title = {Compiling Tensor Expressions into Einsum},
  year = {2023},
  booktitle = {International Conference on Conceptual Structures},
  url = {https://doi.org/10.1007/978-3-031-36021-3_10},
}`,
    abstract: ``,
  },
];
